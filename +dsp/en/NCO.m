classdef NCO< handle
%NCO    Generate real or complex sinusoidal signals
%   HNCO = dsp.NCO returns a numerically controlled oscillator (NCO) System
%   object, HNCO, that generates a multichannel real or complex sinusoidal
%   signal, with independent frequency and phase in each output channel.
%   The amplitude of the generated signal is always 1.
%
%   HNCO = dsp.NCO('PropertyName', PropertyValue, ...) returns an NCO
%   System object, HNCO, with each specified property set to the specified
%   value.
%
%   Step method syntax:
%
%   Y = step(HNCO, INC) returns a sinusoidal signal, Y, generated by the
%   NCO, with the specified phase increment, INC. INC must be a built-in
%   integer or a fi object, and can either be a scalar or a row vector,
%   where each row element corresponds to a separate channel.
%
%   Y = step(HNCO) returns a sinusoidal signal, Y, when the
%   PhaseIncrementSource and PhaseOffsetSource properties are both
%   'Property'.
%
%   Y = step(HNCO, OFFSET) returns a sinusoidal signal, Y, with phase
%   offset, OFFSET, when the PhaseOffsetSource property is 'Input port'.
%   OFFSET must be a built-in integer or a fi object. The number of rows of
%   OFFSET determines the number of samples per frame of the output signal,
%   and the number of columns of the OFFSET determines the number of
%   channels of the output signal.
%
%   Y = step(HNCO, INC, OFFSET) returns a sinusoidal signal, Y, with phase
%   increment, INC, and phase offset, OFFSET, when the PhaseIncrementSource
%   and the PhaseOffsetSource properties are both 'Input port'. INC and
%   OFFSET must both be row vectors of the same length, where the length
%   determines the number of channels in the output signal.
%
%   [Y, QERR] = step(HNCO, ...) returns a sinusoidal signal, Y, and output
%   quantization error, QERR, when the PhaseQuantization and the
%   PhaseQuantizationErrorOutputPort properties are both true.
%
%   NCO methods:
%
%   step     - See above description for use of this method
%   release  - Allow property value and input characteristics changes
%   clone    - Create NCO object with same property values
%   isLocked - Locked status (logical)
%   reset    - Reset the states
%   info     - Returns characteristic information about generated signal
%
%   NCO properties:
%
%   PhaseIncrementSource             - Source of phase increment
%   PhaseIncrement                   - Phase increment
%   PhaseOffsetSource                - Source of phase offset
%   PhaseOffset                      - Phase offset of NCO
%   Dither                           - Enables adding internal dithering to
%                                      NCO algorithm
%   NumDitherBits                    - Number of dither bits
%   PhaseQuantization                - Enables quantization of accumulated
%                                      phase
%   NumQuantizerAccumulatorBits      - Number of quantizer accumulator bits
%   PhaseQuantizationErrorOutputPort - Enables output of phase quantization
%                                      error
%   Waveform                         - Type of output signal
%   SamplesPerFrame                  - Number of output samples per frame
%   OutputDataType                   - Output data type
%
%   This System object supports fixed-point operations. For more
%   information, type dsp.NCO.helpFixedPoint.
%
%   % EXAMPLE: Design an NCO source according to given specifications.
%       F0 = 510;     % Output frequency = 510 Hz
%       df = 0.05;    % Frequency resolution = 0.05 Hz
%       minSFDR = 96; % Spurious free dynamic range >= 96 dB
%       Ts = 1/8000;  % Sample period = 1/8000 sec
%       dphi = pi/2;  % Desired phase offset = pi/2;
%
%       % Calculate number of accumulator bits required for the given
%       % frequency resolution
%       Nacc = ceil(log2(1/(df*Ts)));
%       actdf = 1/(Ts*2^Nacc); % Actual frequency resolution achieved
%       % Calculate number of quantized accumulator bits required from the 
%       % SFDR requirement
%       Nqacc = ceil((minSFDR-12)/6);
%       % Calculate the phase increment 
%       phIncr = round(F0*Ts*2^Nacc);
%       % Calculate the phase offset
%       phOffset = 2^Nacc*dphi/(2*pi);
%       
%       hnco = dsp.NCO('PhaseIncrementSource', 'Property', ...
%           'PhaseIncrement', phIncr,...
%           'PhaseOffset', phOffset,...
%           'NumDitherBits', 4, ...
%           'NumQuantizerAccumulatorBits', Nqacc,...
%           'SamplesPerFrame', 1/Ts, ...
%           'CustomAccumulatorDataType', numerictype([],Nacc));
%       
%       y = step(hnco);
%       % Plot the power spectrum of the 510 Hz sinewave generated by the NCO
%       periodogram(double(y),hann(length(y),'periodic'),[],1/Ts,'power');
%
%   See also dsp.SineWave, dsp.NCO.helpFixedPoint.

 
%   Copyright 2008-2013 The MathWorks, Inc.

    methods
        function out=NCO
            %NCO    Generate real or complex sinusoidal signals
            %   HNCO = dsp.NCO returns a numerically controlled oscillator (NCO) System
            %   object, HNCO, that generates a multichannel real or complex sinusoidal
            %   signal, with independent frequency and phase in each output channel.
            %   The amplitude of the generated signal is always 1.
            %
            %   HNCO = dsp.NCO('PropertyName', PropertyValue, ...) returns an NCO
            %   System object, HNCO, with each specified property set to the specified
            %   value.
            %
            %   Step method syntax:
            %
            %   Y = step(HNCO, INC) returns a sinusoidal signal, Y, generated by the
            %   NCO, with the specified phase increment, INC. INC must be a built-in
            %   integer or a fi object, and can either be a scalar or a row vector,
            %   where each row element corresponds to a separate channel.
            %
            %   Y = step(HNCO) returns a sinusoidal signal, Y, when the
            %   PhaseIncrementSource and PhaseOffsetSource properties are both
            %   'Property'.
            %
            %   Y = step(HNCO, OFFSET) returns a sinusoidal signal, Y, with phase
            %   offset, OFFSET, when the PhaseOffsetSource property is 'Input port'.
            %   OFFSET must be a built-in integer or a fi object. The number of rows of
            %   OFFSET determines the number of samples per frame of the output signal,
            %   and the number of columns of the OFFSET determines the number of
            %   channels of the output signal.
            %
            %   Y = step(HNCO, INC, OFFSET) returns a sinusoidal signal, Y, with phase
            %   increment, INC, and phase offset, OFFSET, when the PhaseIncrementSource
            %   and the PhaseOffsetSource properties are both 'Input port'. INC and
            %   OFFSET must both be row vectors of the same length, where the length
            %   determines the number of channels in the output signal.
            %
            %   [Y, QERR] = step(HNCO, ...) returns a sinusoidal signal, Y, and output
            %   quantization error, QERR, when the PhaseQuantization and the
            %   PhaseQuantizationErrorOutputPort properties are both true.
            %
            %   NCO methods:
            %
            %   step     - See above description for use of this method
            %   release  - Allow property value and input characteristics changes
            %   clone    - Create NCO object with same property values
            %   isLocked - Locked status (logical)
            %   reset    - Reset the states
            %   info     - Returns characteristic information about generated signal
            %
            %   NCO properties:
            %
            %   PhaseIncrementSource             - Source of phase increment
            %   PhaseIncrement                   - Phase increment
            %   PhaseOffsetSource                - Source of phase offset
            %   PhaseOffset                      - Phase offset of NCO
            %   Dither                           - Enables adding internal dithering to
            %                                      NCO algorithm
            %   NumDitherBits                    - Number of dither bits
            %   PhaseQuantization                - Enables quantization of accumulated
            %                                      phase
            %   NumQuantizerAccumulatorBits      - Number of quantizer accumulator bits
            %   PhaseQuantizationErrorOutputPort - Enables output of phase quantization
            %                                      error
            %   Waveform                         - Type of output signal
            %   SamplesPerFrame                  - Number of output samples per frame
            %   OutputDataType                   - Output data type
            %
            %   This System object supports fixed-point operations. For more
            %   information, type dsp.NCO.helpFixedPoint.
            %
            %   % EXAMPLE: Design an NCO source according to given specifications.
            %       F0 = 510;     % Output frequency = 510 Hz
            %       df = 0.05;    % Frequency resolution = 0.05 Hz
            %       minSFDR = 96; % Spurious free dynamic range >= 96 dB
            %       Ts = 1/8000;  % Sample period = 1/8000 sec
            %       dphi = pi/2;  % Desired phase offset = pi/2;
            %
            %       % Calculate number of accumulator bits required for the given
            %       % frequency resolution
            %       Nacc = ceil(log2(1/(df*Ts)));
            %       actdf = 1/(Ts*2^Nacc); % Actual frequency resolution achieved
            %       % Calculate number of quantized accumulator bits required from the 
            %       % SFDR requirement
            %       Nqacc = ceil((minSFDR-12)/6);
            %       % Calculate the phase increment 
            %       phIncr = round(F0*Ts*2^Nacc);
            %       % Calculate the phase offset
            %       phOffset = 2^Nacc*dphi/(2*pi);
            %       
            %       hnco = dsp.NCO('PhaseIncrementSource', 'Property', ...
            %           'PhaseIncrement', phIncr,...
            %           'PhaseOffset', phOffset,...
            %           'NumDitherBits', 4, ...
            %           'NumQuantizerAccumulatorBits', Nqacc,...
            %           'SamplesPerFrame', 1/Ts, ...
            %           'CustomAccumulatorDataType', numerictype([],Nacc));
            %       
            %       y = step(hnco);
            %       % Plot the power spectrum of the 510 Hz sinewave generated by the NCO
            %       periodogram(double(y),hann(length(y),'periodic'),[],1/Ts,'power');
            %
            %   See also dsp.SineWave, dsp.NCO.helpFixedPoint.
        end

        function helpFixedPoint(in) %#ok<MANU>
            %helpFixedPoint Display dsp.NCO System object fixed-point information
            %   dsp.NCO.helpFixedPoint displays information about fixed-point
            %   properties and operations of the dsp.NCO System object.
        end

        function infoImpl(in) %#ok<MANU>
            %info Returns characteristic information about generated signal
            %   S = info(OBJ) returns a structure containing characteristic
            %   information, S, about the signal being generated by the NCO
            %   System object, OBJ. The number of fields of S, and their values vary
            %   depending on the property value settings of OBJ. A description of
            %   the possible fields and their values is as follows.
            %   NumPointsLUT        - Number of data points for lookup table. The
            %                         lookup table is implemented as a quarter-wave
            %                         sine table.
            %   SineLUTSize         - Quarter-wave sine lookup table size in bytes.
            %   TheoreticalSFDR     - Theoretical spurious free dynamic range (SFDR)
            %                         in dBc. This field is available when the
            %                         PhaseQuantization property is true.
            %   FrequencyResolution - Frequency resolution of the NCO in Hz. The
            %                         sample time of the output signal is assumed to
            %                         be 1 sec.
        end

        function isInactivePropertyImpl(in) %#ok<MANU>
        end

    end
    methods (Abstract)
    end
    properties
        %AccumulatorDataType Accumulator word- and fraction-length designations
        %   This is a constant property with value 'Custom'.
        AccumulatorDataType;

        %CustomAccumulatorDataType Accumulator word- and fraction-lengths
        %   Specify the accumulator fixed-point type as an auto-signed unscaled
        %   numerictype object. The default value of this property is
        %   numerictype([],16).
        %
        %   See also numerictype.
        CustomAccumulatorDataType;

        %CustomOutputDataType Output word and fraction lengths
        %   Specify the output fixed-point type as an auto-signed scaled
        %   numerictype object. This property is applicable when the
        %   OutputDataType property is 'Custom'. The default value of this
        %   property is numerictype([],16,14).
        %
        %   See also numerictype.
        CustomOutputDataType;

        %Dither Enables adding internal dithering to NCO algorithm
        %   Set this property to true to add internal dithering to the NCO
        %   algorithm. Dithering is added using the PN Sequence Generator from
        %   the Communications System Toolbox product. The default value of
        %   this property is true.
        Dither;

        %NumDitherBits Number of dither bits
        %   Specify the number of dither bits as a positive integer. This
        %   property is applicable when the Dither property is true. The
        %   default value of this property is 4.
        NumDitherBits;

        %NumQuantizerAccumulatorBits Number of quantizer accumulator bits
        %   Specify the number of quantizer accumulator bits as an integer
        %   scalar greater than 1 and less than the accumulator word length.
        %   This property determines the number of entries in the lookup table
        %   of sine values. This property is applicable when the
        %   PhaseQuantization property is true. The default value of this
        %   property is 12.
        NumQuantizerAccumulatorBits;

        %OutputDataType Output data type
        %   Specify the output data type as one of ['double' | 'single' |
        %   {'Custom'}].
        OutputDataType;

        %OverflowAction Overflow action for fixed-point operations
        %   This is a constant property with value 'Wrap'.
        OverflowAction;

        %PhaseIncrement Phase increment
        %   Specify the phase increment as an integer scalar. This property is
        %   applicable when the PhaseIncrementSource property is 'Property'.
        %   The default value of this property is 100.
        PhaseIncrement;

        %PhaseIncrementSource Source of phase increment
        %   Indicate how to specify the phase increment as one of [ 'Property'
        %   | {'Input port'} ].
        PhaseIncrementSource;

        %PhaseOffset Phase offset
        %   Specify the phase offset as an integer scalar. This property is
        %   applicable when the PhaseOffsetSource property is 'Property'. The
        %   default value of this property is 0.
        PhaseOffset;

        %PhaseOffsetSource Source of phase offset
        %   Indicate how to specify the phase offset as one of [{'Property'} |
        %   'Input port' ].
        PhaseOffsetSource;

        %PhaseQuantization Enables quantization of accumulated phase
        %   Set this property to true to enable quantization of the accumulated
        %   phase. The default value of this property is true.
        PhaseQuantization;

        %PhaseQuantizationErrorOutputPort Enables output of phase quantization
        %                                 error
        %   Set this property to true to output the phase quantization error.
        %   This property is applicable when the PhaseQuantization property is
        %   true. The default value of this property is false.
        PhaseQuantizationErrorOutputPort;

        %RoundingMethod Rounding method for fixed-point operations
        %   This is a constant property with value 'Floor'.
        RoundingMethod;

        %SamplesPerFrame Number of output samples per frame
        %   Specify the number of samples per frame of the output signal. This
        %   property is applicable when the PhaseOffsetSource property is
        %   'Property'. The default value of this property is 1. When the
        %   PhaseOffsetSource property is 'Input port', and the
        %   PhaseIncrementSource property is 'Property', the number of rows or
        %   frame size of the phase offset input determines the number of
        %   samples per frame of the output signal. When both the
        %   PhaseOffsetSource and PhaseIncrementSource properties are set to
        %   'Input port', the number of rows in the inputs must be 1, and the
        %   samples per frame of the output signal is 1.
        SamplesPerFrame;

        %Waveform Type of output signal
        %   Specify the type of the output signal as one of [{'Sine'} |
        %   'Cosine' | 'Complex exponential' | 'Sine and cosine'].
        Waveform;

    end
end
