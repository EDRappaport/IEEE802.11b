%PWELCH  Welch 法を使って、パワースペクトル密度を計算
%
%   Pxx = PWELCH(X) は、Welch の平均化、修正ピリオドグラム法を使って、
%   離散時間信号ベクトル X のパワースペクトル密度 (PSD) の推定を返します。
%   デフォルトで、X は 50% のオーバラップを持つ 8 つのグループに分割し、
%   各グループに Hamming ウィンドウを適用し、8 つのグループの修正ピリオドグラム
%   を計算し、平均化します。
%
%   X の長さが、50% のオーバラップを持つ 8 つのグループに正確に分割できない
%   場合、X は、適切に分割されます。
%
%   Pxx は、単位周波数に対するパワーの分布を示すものです。デフォルトでは、
%   PWELCH は、実数信号では片側 PSD で、複素数信号では両側 PSD です。片側 
%   PSD は、入力信号のすべてのパワーを含んでいることに注意してください。
%
%   さらに、デフォルトウィンドウ (Hamming) は、42.5 dB のサイドローブの減衰を
%   持つことにも注意してください。これは、(ピークのスペクトルに対する) この値の
%   もとでスペクトルにマスクをかける可能性があります。別のウィンドウを選択する
%   と、分解能 (例. 箱型ウィンドウを使用) とサイドローブの減衰 (例. Hann 
%   ウィンドウを使用) 間のトレードオフを行うことが可能になります。詳細は、
%   WinTool を参照してください。
%
%   Pxx = PWELCH(X,WINDOW) は、X を WINDOW の長さに等しい長さでオーバラップ
%   する部分に分割し、WINDOW に設定したベクトルで各部分をウィンドウ処理します。
%   ここで、WINDOW は、ベクトルで設定しています。WINDOW が整数の場合、X はその
%   整数値に等しい長さのセクションに分割され、長さの等しい Hamming ウィンドウが
%   使われます。X の長さが、50% のオーバラップを行いながら整数倍に正確になって
%   いない場合、適切に X を分割します。WINDOW が省略されるか、または空の場合、
%   デフォルトのウィンドウが、X を 8 つに分割した部分に使われます。
%
%   Pxx = PWELCH(X,WINDOW,NOVERLAP) は、NOVERLAP サンプル分だけオーバラップ
%   した部分を含むように分割します。NOVERLAP は、WINDOW が 整数の場合、
%   WINDOW よりも整数分だけ短いものになります。NOVERLAP は、WINDOW が
%   ベクトルの場合、WINDOW の長さよりも整数分だけ短いものになります。
%   NOVERLAP が省略されたり、空で設定される場合、デフォルト値は、50% の
%   オーバラップが使われます。
%
%   [Pxx,W] = PWELCH(X,WINDOW,NOVERLAP,NFFT) は、PSD 推定を計算するために 
%   FFT の長さを設定します。実数 X に対して、Pxx は、NFFT が偶数の場合 
%   (NFFT/2+1) で、奇数の場合 (NFFT+1)/2 です。複素数 X に対して、Pxx は、
%   長さが常に NFFT になります。NFFT が空で指定された場合、デフォルトの 
%   NFFT は、256 の最大、または使用する X の各セクションの長さより大きい 
%   2 のべき乗のどちらかです。
%
%   NFFT がセグメントよりも大きい場合、データに 0 が加えられることに注意して
%   ください。NFFT がセグメントよりも小さい場合は、セグメントは (DATAWRAP を
%   使って) "wrapped" され、長さは NFFT と等しくなります。これにより、L が信号、
%   またはセグメントの長さであり、NFFT < L のとき、正しい FFT を生成します。
%
%   PSD を計算する正規化された周波数からなるベクトル W を返します。W の単位
%   は、ラジアン/サンプルです。実数信号に対して、W は、NFFT が偶数の場合 
%   [0,pi] の区間に広がり、NFFT が奇数の場合 [0,pi) の範囲になります。
%   複素数信号の場合、W は、常に、[0.2*pi) の区間です。
%
%   [Pxx,W] = PWELCH(X,WINDOW,NOVERLAP,W) は、W を (2 以上の要素を持つ) 
%   正規化周波数ベクトルとして、Goertzel アルゴリズムを使用して、これらの
%   周波数における PSD を計算します。この場合、両側 PSD が返されます。W に
%   指定した周波数は、信号の分解能に比例して最も近い DFT のバイナリの値に
%   丸められます。
%
%   [Pxx,F] = PWELCH(X,WINDOW,NOVERLAP,NFFT,Fs) は、物理的な意味を持つ周波数 
%   (Hz) の関数として PSD を計算します。Fs は、Hz で指定されたサンプリング
%   周波数です。Fs が空の場合、デフォルトの 1Hz になります。
%
%   F は、Hz 単位の周波数ベクトルで、ここで設定されている周波数で、PSD を計算
%   します。実数信号に対して、F は、NFFT が偶数の場合 [0,Fs/2] で、奇数の場合 
%   [0,Fs/2) の範囲に広がります。複素数信号に対して、F は、常に、[0,Fs) の
%   範囲です。
%
%   [Pxx,F] = PWELCH(X,WINDOW,NOVERLAP,F,Fs) は、F を (2 以上の要素を持つ) 
%   Hz 単位の周波数ベクトルとして、Goertzel アルゴリズムを使用して、これらの
%   周波数における PSD を計算します。この場合、両側 PSD が返されます。F に
%   指定した周波数は、信号の分解能に比例して最も近い DFT のバイナリの値に
%   丸められます。
%
%   [...] = PWELCH(...,'twosided') は、実数信号 X の両側 PSD を返します。この
%   場合、Pxx は、長さ NFFT を持ち、Fs が設定されていない場合 [0,2*Pi) の範囲、
%   Fs が設定されている場合 [0,Fs) の範囲です。一方、文字列 'twosided' は、
%   実数信号 X に対する文字列 'onesided' と置き換わります。これは、デフォルトの
%   挙動と同じになります。文字列 'twosided' または 'onesided' は、入力引数の 
%   NOVERLAP の後の任意の位置に設定することができます。
%
%   出力引数を設定しない PWELCH(...) は、デフォルトで、現在の Figure 
%   ウィンドウに周波数毎に dB 単位で PSD の推定をプロットします。
%
%   例:
%      Fs = 1000;   t = 0:1/Fs:.296;
%      x = cos(2*pi*t*200)+randn(size(t)); % 200Hz の余弦波にノイズを加算
%      pwelch(x,[],[],[],Fs,'twosided');   % ウィンドウ、オーバラップ量、
%      NFFT の値はデフォルトを使用
%
%   参考 PERIODOGRAM, PCOV, PMCOV, PBURG, PYULEAR, PEIG, PMTM, PMUSIC, 
%        SPECTRUM, DSPDATA.


%   Copyright 1988-2008 The MathWorks, Inc.
