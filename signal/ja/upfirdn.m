%UPFIRDN  FIR フィルタの適用と間引きを適用
%
%   UPFIRDN(X,H,P,Q) は、つぎの 3 つの操作を入力信号 X にカスケード的に
%   実行します。
%         (1) P によるアップサンプリング (0 挿入)。P が設定されていない場合、
%             デフォルトで 1 が使われます。
%         (2) H に与えられたインパルス応答で設定されたフィルタを使って 
%             FIR のフィルタリングを行います。
%         (3) Q によるダウンサンプリング (サンプルを間引き)。設定されて
%             いない場合、Q はデフォルトで 1 です。
%   UPFIRDN は、ポリフェーズ構造を使用します。
%
%   通常、入力 X とフィルタ H はベクトルで、出力は (信号) ベクトルです。
%   UPFIRDN では、配列引数に対して、以下の組合せがあります。X が行列で、
%   H がベクトルの場合、X の各列は、H でフィルタリングします。X がベクトルで、
%   H が行列の場合、H の各列が X をフィルタリングするために使われます。
%   X と H が共に行列 (同じ列数) の場合、H の i 番目の列が、X の i 番目の
%   列をフィルタリングするために使われます。
%
%   特に、これらの組み合わせは、つぎのように実行されます。出力の長さは、
%   Ly = ceil( ((Lx-1)*P + Lh)/Q ) であることに注意してください。
%   ここで、Lx = length(X)、Lh = length(H) です。
%
%      入力信号 X        入力フィルタ H    出力信号 Y        記法
%      -----------------------------------------------------------------
%   1) 長さ Lx ベクトル  長さ Lh ベクトル  長さ Ly ベクトル  通常使用
%   2) Lx×Nx 行列       長さ Lh ベクトル  Ly×Nx 行列       X の各列を H で
%                                                            フィルタリング
%   3) 長さ Lx ベクトル  Lh×Nh 行列       Ly×Nh 行列       H の各列は X で
%                                                            フィルタリングする
%                                                            ために使用
%   4) Lx×N 行列        Lh×N 行列        Ly×N 行列        H のi番目の列を使って 
%                                                            X の i 番目の列を
%                                                            フィルタリング
%
%   UPFIRDN より、もっと簡単に使うには、フィルタを設定したり、フィルタリングに
%   より導入される信号の遅れを補償する必要のない RESAMPLE を使ってください。
%
%   例: 147/160 のファクタでサンプルレートを変換 (48kHz から 44.1kHz に
%       ダウンコンバートするために使用)
%        L = 147; M = 160;            % 内挿/間引きファクタ
%        N = 24*M;
%        h = fir1(N,1/M,kaiser(N+1,7.8562));
%        h = L*h; % Passband gain = L
%        Fs = 48e3;                   % オリジナルのサンプリング周波数: 48kHz
%        n = 0:10239;                 % 10240 サンプル、 0.213 秒
%        x  = sin(2*pi*1e3/Fs*n);     % オリジナル信号 1kHz での正弦波
%        y = upfirdn(x,h,L,M);        % 9408 サンプル、0.213 秒
%
%        % オリジナル (48kHz) とリサンプリングされた信号 (44.1kHz) を赤色で重ねる
%        stem(n(1:49)/Fs,x(1:49)); hold on
%        stem(n(1:45)/(Fs*L/M),y(13:57),'r','filled');
%        xlabel('Time (sec)');ylabel('Signal value');
%
%   参考 RESAMPLE, INTERP, DECIMATE, FIR1, INTFILT, Filter Design Toolbox の 
%        MFILT/FIRSRC.


%   Copyright 1988-2007 The MathWorks, Inc.
