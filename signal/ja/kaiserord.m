%KAISERORD  FIR フィルタの次数推定 (ローパス、ハイパス、バンドパス、マルチバンド)
%
%   [N,Wn,BTA,FIRTYPE] = KAISERORD(F,A,DEV,Fs) は、下記のシンタックスをもつ
%   近似次数 N、正規化された周波数帯域エッジ Wn、Kaiser ウインドウパラメータ 
%   BTA、FIR1 の関数で使われるフィルタタイプ FILTYPE です。
%      B = FIR1(N, Wn, FILTYPE, kaiser( N+1,BTA ), 'noscale' )
%
%   結果として求まるフィルタは、入力パラメータ F, A, DEV で設定される仕様を
%   近似的に満たします。
%
%   F は、ヘルツ単位で表したカットオフ周波数ベクトルで、0 からサンプリング
%   周波数 Fs の半分の範囲で、増加するように並べたものです。A は F で設定
%   された周波数に対する希望する応答の振幅で、0 と 1 の範囲の数字で表します。
%   F の長さは、A の長さの 2 倍から 2 を引いた値 (したがって偶数) です。
%   最初の周波数帯域は、0 から始まり、最後の周波数帯域は Fs/2 で終了すると
%   仮定します。
%
%   DEV は、各帯域に対して許容される最大偏差、またはリップル (線形の単位) の
%   ベクトルです。(MIN(DEV)) で指定した最小偏差は、通過帯域と遮断帯域の両方に
%   使用されます。
%
%   Fs は、サンプリング周波数 (設定しない場合、デフォルトは 2) です。
%
%   C = KAISERORD(F,A,DEV,Fs,'cell') は、その要素が FIR1 へのパラメータ
%   になるセル配列です。
%
%   例
%      1500Hz の通過帯域カットオフ周波数、2000Hz の遮断帯域カットオフ周波数、
%      通過帯域でのリップルが 0.01、遮断帯域でのリップルが 0.1、サンプリング
%      周波数が 8000Hz のローパスフィルタを設計します。
%
%      [n,Wn,bta,filtype] = kaiserord( [1500 2000], [1 0], [0.01 0.1], 8000 );
%      b = fir1(n, Wn, filtype, kaiser(n+1,bta), 'noscale');
%
%      これは、つぎのものと等価です。
%      c = kaiserord( [1500 2000], [1 0], [0.01 0.1], 8000, 'cell' );
%      b = fir1(c{:});
%
%   注意 1:次数 N が推定されます。オリジナルの仕様を満たさない場合、N+1, 
%   N+2 等のように、より高い次数を使用してみてください。また、仕様を満たし
%   過ぎる場合は、次数を減らしてみてください。注意 2:カットオフ周波数が 0 か、
%   ナイキスト周波数の近くにある場合、あるいは devs が大きい (10% を越える) 
%   場合、結果は不正確になります。
%
%   参考 FIR1, KAISER, FIRPMORD.


%   Copyright 1988-2007 The MathWorks, Inc.
